/*
	NOTE:
	This file was autogenerated by CppGen, changes may be overwritten and forever lost!
	Modify at your own risk!
	
	[ Generated on 2023.06.23 22:26:53 ]
*/

#include "Scripts.hpp"

namespace CppProject
{
	void app_startup_interface_tabs()
	{
		global::_app->tab_move = null_;
		global::_app->tab_move_name = /*""*/ STR(0);
		global::_app->tab_move_x = IntType(0);
		global::_app->tab_move_width = IntType(0);
		global::_app->tab_move_direction = e_scroll_VERTICAL;
		global::_app->tab_move_box_x = IntType(0);
		global::_app->tab_move_box_y = IntType(0);
		global::_app->tab_move_box_width = IntType(0);
		global::_app->tab_move_box_height = IntType(0);
		global::_app->tab_move_mouseon_panel = null_;
		global::_app->tab_move_mouseon_panel_prev = null_;
		global::_app->tab_move_mouseon_position = IntType(0);
		global::_app->properties = new_tab(global::_app->setting_properties_location, true);
		withOne (obj_tab, global::_app->properties, global::_app->id)
		{
			self->project = tab_add_category(self, /*"project"*/ STR(207), icons_CLAPPERBOARD_SMALL, ID_tab_properties_project, false);
			withOne (obj_category, self->project, self->id)
			{
				self->tbx_name = new_textbox(true, IntType(0), /*""*/ STR(0));
				self->tbx_author = new_textbox(true, IntType(0), /*""*/ STR(0));
				self->tbx_description = new_textbox(false, IntType(0), /*""*/ STR(0));
				self->tbx_video_size_custom_width = new_textbox_integer();
				self->tbx_video_size_custom_height = new_textbox_integer();
				self->tbx_tempo = new_textbox_integer();
			}
			
			self->render = tab_add_category(self, /*"render"*/ STR(9), icons_CAMERA_PHOTO_SMALL, ID_tab_properties_render, false);
			withOne (obj_category, self->render, self->id)
			{
				self->tbx_dof_quality = new_textbox_integer();
				self->tbx_ssao_radius = new_textbox_decimals();
				self->tbx_ssao_power = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_ssao_power)->suffix = /*"%"*/ STR(208);
				self->tbx_samples = new_textbox_integer();
				self->tbx_render_distance = new_textbox_integer();
				self->tbx_subsurface_samples = new_textbox_integer();
				self->tbx_subsurface_highlight = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_subsurface_highlight)->suffix = /*"%"*/ STR(208);
				self->tbx_subsurface_highlight_strength = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_subsurface_highlight_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_indirect_precision = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_indirect_precision)->suffix = /*"%"*/ STR(208);
				self->tbx_indirect_blur_radius = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_indirect_blur_radius)->suffix = /*"%"*/ STR(208);
				self->tbx_indirect_strength = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_indirect_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_reflections_precision = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_reflections_precision)->suffix = /*"%"*/ STR(208);
				self->tbx_reflections_thickness = new_textbox_decimals();
				self->tbx_reflections_fade_amount = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_reflections_fade_amount)->suffix = /*"%"*/ STR(208);
				self->tbx_glow_radius = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_glow_radius)->suffix = /*"%"*/ STR(208);
				self->tbx_glow_intensity = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_glow_intensity)->suffix = /*"%"*/ STR(208);
				self->tbx_glow_falloff_radius = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_glow_falloff_radius)->suffix = /*"%"*/ STR(208);
				self->tbx_glow_falloff_intensity = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_glow_falloff_intensity)->suffix = /*"%"*/ STR(208);
				self->tbx_aa_power = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_aa_power)->suffix = /*"%"*/ STR(208);
				self->tbx_block_emissive = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_block_emissive)->suffix = /*"%"*/ STR(208);
				self->tbx_glint_speed = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_glint_speed)->suffix = /*"%"*/ STR(208);
				self->tbx_glint_strength = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_glint_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_block_subsurface_radius = new_textbox_decimals();
				self->tbx_texture_filtering_level = new_textbox_integer();
				self->tbx_exposure = new_textbox_decimals();
				self->tbx_gamma = new_textbox_decimals();
			}
			
			self->library = tab_add_category(self, /*"library"*/ STR(209), icons_LIBRARY_SMALL, ID_tab_properties_library, false);
			withOne (obj_category, self->library, self->id)
			{
				self->preview = (new obj_preview)->id;
				ObjType(obj_preview, self->preview)->spawn_active = true;
				self->list = (new obj_sortlist)->id;
				idBool(self->list, can_deselect) = true;
				idVar(self->list, script) = ID_action_lib_list;
				sortlist_column_add(self->list, /*"libname"*/ STR(210), IntType(0));
				sortlist_column_add(self->list, /*"libtype"*/ STR(211), 0.35);
				sortlist_column_add(self->list, /*"libinstances"*/ STR(212), 0.65);
				self->tbx_name = new_textbox(IntType(1), IntType(0), /*""*/ STR(0));
				self->tbx_repeat_x = new_textbox_integer();
				self->tbx_repeat_y = new_textbox_integer();
				self->tbx_repeat_z = new_textbox_integer();
				self->tbx_shape_detail = new_textbox_integer();
				self->tbx_shape_tex_hoffset = new_textbox_ndecimals();
				self->tbx_shape_tex_voffset = new_textbox_ndecimals();
				self->tbx_shape_tex_hrepeat = new_textbox_decimals();
				self->tbx_shape_tex_vrepeat = new_textbox_decimals();
			}
			
			self->background = tab_add_category(self, /*"background"*/ STR(213), icons_WORLD_SMALL, ID_tab_properties_background, false);
			withOne (obj_category, self->background, self->id)
			{
				self->tbx_background_rotation = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_background_rotation)->suffix = /*"°"*/ STR(214);
				self->tbx_sky_time = new_textbox(true, IntType(10), /*"-:0123456789"*/ STR(215));
				self->tbx_sky_rotation = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_sky_rotation)->suffix = /*"°"*/ STR(214);
				self->tbx_sky_sun_angle = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_sky_sun_angle)->suffix = /*"°"*/ STR(214);
				self->tbx_sky_sun_scale = new_textbox_decimals();
				self->tbx_sky_moon_angle = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_sky_moon_angle)->suffix = /*"°"*/ STR(214);
				self->tbx_sky_moon_scale = new_textbox_decimals();
				self->tbx_sunlight_strength = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_sunlight_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_sunlight_angle = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_sunlight_angle)->suffix = /*"°"*/ STR(214);
				self->tbx_sky_clouds_height = new_textbox_ndecimals();
				self->tbx_sky_clouds_size = new_textbox_decimals();
				self->tbx_sky_clouds_thickness = new_textbox_decimals();
				self->tbx_sky_clouds_speed = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_sky_clouds_speed)->suffix = /*"%"*/ STR(208);
				self->tbx_sky_clouds_offset = new_textbox_ndecimals();
				self->tbx_fog_distance = new_textbox_integer();
				self->tbx_fog_size = new_textbox_integer();
				self->tbx_fog_height = new_textbox_integer();
				self->tbx_wind_speed = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_wind_speed)->suffix = /*"%"*/ STR(208);
				self->tbx_wind_strength = new_textbox_decimals();
				self->tbx_wind_direction = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_wind_direction)->suffix = /*"°"*/ STR(214);
				self->tbx_wind_directional_speed = new_textbox_decimals();
				ObjType(obj_textbox, self->tbx_wind_directional_speed)->suffix = /*"%"*/ STR(208);
				self->tbx_wind_directional_strength = new_textbox_decimals();
				self->tbx_texture_animation_speed = new_textbox_ndecimals();
			}
			
			self->resources = tab_add_category(self, /*"resources"*/ STR(216), icons_FILE_SMALL, ID_tab_properties_resources, false);
			withOne (obj_category, self->resources, self->id)
			{
				self->preview = (new obj_preview)->id;
				self->list = (new obj_sortlist)->id;
				idBool(self->list, can_deselect) = true;
				idVar(self->list, script) = ID_action_res_list;
				sortlist_column_add(self->list, /*"resname"*/ STR(217), IntType(0));
				sortlist_column_add(self->list, /*"restype"*/ STR(218), 0.35);
				sortlist_column_add(self->list, /*"rescount"*/ STR(219), 0.65);
				sortlist_add(self->list, global::mc_res);
				self->tbx_item_sheet_width = new_textbox_integer();
				self->tbx_item_sheet_height = new_textbox_integer();
				self->tbx_scenery_integrity = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_scenery_integrity)->suffix = /*"%"*/ STR(208);
			}
			
		}
		
		global::_app->lib_preview = ObjType(obj_category, ObjType(obj_tab, global::_app->properties)->library)->preview;
		global::_app->lib_list = ObjType(obj_category, ObjType(obj_tab, global::_app->properties)->library)->list;
		global::_app->res_preview = ObjType(obj_category, ObjType(obj_tab, global::_app->properties)->resources)->preview;
		global::_app->res_list = ObjType(obj_category, ObjType(obj_tab, global::_app->properties)->resources)->list;
		global::_app->ground_editor = new_tab(global::_app->setting_ground_editor_location, false);
		ObjType(obj_tab, global::_app->ground_editor)->script = ID_tab_ground_editor;
		withOne (obj_tab, global::_app->ground_editor, global::_app->id)
			self->ground_scroll = (new obj_scrollbar)->id;
		
		global::_app->template_editor = new_tab(global::_app->setting_template_editor_location, false);
		ObjType(obj_tab, global::_app->template_editor)->script = ID_tab_template_editor;
		withOne (obj_tab, global::_app->template_editor, global::_app->id)
		{
			self->char_list = (new obj_sortlist)->id;
			ObjType(obj_sortlist, self->char_list)->script = ID_action_lib_model_name;
			sortlist_column_add(self->char_list, /*"charname"*/ STR(182), IntType(0));
			for (IntType c = IntType(0); c < ds_list_size(ObjType(obj_minecraft_assets, global::mc_assets)->char_list); c++)
				sortlist_add(self->char_list, ObjType(obj_model, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->char_list).Value(c))->name);
			self->item_scroll = (new obj_scrollbar)->id;
			self->block_list = (new obj_sortlist)->id;
			ObjType(obj_sortlist, self->block_list)->script = ID_action_lib_block_name;
			sortlist_column_add(self->block_list, /*"blockname"*/ STR(183), IntType(0));
			for (IntType b = IntType(0); b < ds_list_size(ObjType(obj_minecraft_assets, global::mc_assets)->block_list); b++)
				if (!(ObjType(obj_block, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->block_list).Value(b))->timeline > 0) || ObjType(obj_block, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->block_list).Value(b))->tl_model_name == /*""*/ STR(0) || ObjType(obj_block, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->block_list).Value(b))->model_double > 0)
					sortlist_add(self->block_list, ObjType(obj_block, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->block_list).Value(b))->name);
			self->special_block_list = (new obj_sortlist)->id;
			ObjType(obj_sortlist, self->special_block_list)->script = ID_action_lib_model_name;
			sortlist_column_add(self->special_block_list, /*"spblockname"*/ STR(184), IntType(0));
			for (IntType b = IntType(0); b < ds_list_size(ObjType(obj_minecraft_assets, global::mc_assets)->special_block_list); b++)
				sortlist_add(self->special_block_list, ObjType(obj_model, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->special_block_list).Value(b))->name);
			self->bodypart_model_list = (new obj_sortlist)->id;
			ObjType(obj_sortlist, self->bodypart_model_list)->script = ID_action_lib_bodypart_model_name;
			sortlist_column_add(self->bodypart_model_list, /*"bodypartmodelname"*/ STR(185), IntType(0));
			for (IntType m = IntType(0); m < ds_list_size(ObjType(obj_minecraft_assets, global::mc_assets)->char_list); m++)
				sortlist_add(self->bodypart_model_list, ObjType(obj_model, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->char_list).Value(m))->name);
			for (IntType m = IntType(0); m < ds_list_size(ObjType(obj_minecraft_assets, global::mc_assets)->special_block_list); m++)
				sortlist_add(self->bodypart_model_list, ObjType(obj_model, DsList(ObjType(obj_minecraft_assets, global::mc_assets)->special_block_list).Value(m))->name);
			self->tbx_spawn_amount = new_textbox_integer();
			self->tbx_spawn_region_sphere_radius = new_textbox_decimals();
			self->tbx_spawn_region_path_radius = new_textbox_decimals();
			self->tbx_spawn_region_cube_size = new_textbox_decimals();
			self->tbx_spawn_region_box_xsize = new_textbox_decimals();
			self->tbx_spawn_region_box_ysize = new_textbox_decimals();
			self->tbx_spawn_region_box_zsize = new_textbox_decimals();
			self->tbx_bounding_box_ground_z = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_xstart = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_ystart = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_zstart = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_xend = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_yend = new_textbox_ndecimals();
			self->tbx_bounding_box_custom_zend = new_textbox_ndecimals();
			self->tbx_destroy_at_amount_val = new_textbox_integer();
			self->tbx_destroy_at_time_seconds = new_textbox_ndecimals();
			self->tbx_destroy_at_time_random = new_textbox_ndecimals();
			self->type_list = (new obj_sortlist)->id;
			ObjType(obj_sortlist, self->type_list)->script = ID_action_lib_pc_type_list;
			ObjType(obj_sortlist, self->type_list)->can_deselect = true;
			sortlist_column_add(self->type_list, /*"particleeditortypename"*/ STR(220), IntType(0));
			sortlist_column_add(self->type_list, /*"particleeditortypekind"*/ STR(221), 0.4);
			sortlist_column_add(self->type_list, /*"particleeditortyperate"*/ STR(222), 0.75);
			self->preview_start = current_time();
			self->preview_speed = IntType(1);
			self->tbx_type_name = new_textbox(true, IntType(0), /*""*/ STR(0));
			self->tbx_type_spawn_rate = new_textbox_integer();
			ObjType(obj_textbox, self->tbx_type_spawn_rate)->suffix = /*"%"*/ STR(208);
			self->tbx_type_text = new_textbox(false, IntType(0), /*""*/ STR(0));
			self->tbx_type_sprite_frame_width = new_textbox_integer();
			self->tbx_type_sprite_frame_height = new_textbox_integer();
			self->tbx_type_sprite_frame_start = new_textbox_integer();
			self->tbx_type_sprite_frame_end = new_textbox_integer();
			self->tbx_type_sprite_animation_speed = new_textbox_decimals();
			self->tbx_type_sprite_animation_speed_random = new_textbox_decimals();
			self->tbx_type_xangle = new_textbox_ndecimals();
			self->tbx_type_xangle_random = new_textbox_ndecimals();
			self->tbx_type_yangle = new_textbox_ndecimals();
			self->tbx_type_yangle_random = new_textbox_ndecimals();
			self->tbx_type_zangle = new_textbox_ndecimals();
			self->tbx_type_zangle_random = new_textbox_ndecimals();
			self->tbx_type_angle_speed = new_textbox_ndecimals();
			self->tbx_type_angle_speed_random = new_textbox_ndecimals();
			self->tbx_type_angle_speed_add = new_textbox_ndecimals();
			self->tbx_type_angle_speed_add_random = new_textbox_ndecimals();
			self->tbx_type_angle_speed_mul = new_textbox_ndecimals();
			self->tbx_type_angle_speed_mul_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_xangle)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xangle_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yangle)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yangle_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zangle)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zangle_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_xspd = new_textbox_ndecimals();
			self->tbx_type_xspd_random = new_textbox_ndecimals();
			self->tbx_type_yspd = new_textbox_ndecimals();
			self->tbx_type_yspd_random = new_textbox_ndecimals();
			self->tbx_type_zspd = new_textbox_ndecimals();
			self->tbx_type_zspd_random = new_textbox_ndecimals();
			self->tbx_type_xspd_add = new_textbox_ndecimals();
			self->tbx_type_xspd_add_random = new_textbox_ndecimals();
			self->tbx_type_yspd_add = new_textbox_ndecimals();
			self->tbx_type_yspd_add_random = new_textbox_ndecimals();
			self->tbx_type_zspd_add = new_textbox_ndecimals();
			self->tbx_type_zspd_add_random = new_textbox_ndecimals();
			self->tbx_type_xspd_mul = new_textbox_ndecimals();
			self->tbx_type_xspd_mul_random = new_textbox_ndecimals();
			self->tbx_type_yspd_mul = new_textbox_ndecimals();
			self->tbx_type_yspd_mul_random = new_textbox_ndecimals();
			self->tbx_type_zspd_mul = new_textbox_ndecimals();
			self->tbx_type_zspd_mul_random = new_textbox_ndecimals();
			self->tbx_type_xrot = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_xrot)->suffix = /*"°"*/ STR(214);
			self->tbx_type_xrot_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_xrot_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_yrot = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_yrot)->suffix = /*"°"*/ STR(214);
			self->tbx_type_yrot_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_yrot_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_zrot = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_zrot)->suffix = /*"°"*/ STR(214);
			self->tbx_type_zrot_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_zrot_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_xrot_spd = new_textbox_ndecimals();
			self->tbx_type_xrot_spd_random = new_textbox_ndecimals();
			self->tbx_type_yrot_spd = new_textbox_ndecimals();
			self->tbx_type_yrot_spd_random = new_textbox_ndecimals();
			self->tbx_type_zrot_spd = new_textbox_ndecimals();
			self->tbx_type_zrot_spd_random = new_textbox_ndecimals();
			self->tbx_type_xrot_spd_add = new_textbox_ndecimals();
			self->tbx_type_xrot_spd_add_random = new_textbox_ndecimals();
			self->tbx_type_yrot_spd_add = new_textbox_ndecimals();
			self->tbx_type_yrot_spd_add_random = new_textbox_ndecimals();
			self->tbx_type_zrot_spd_add = new_textbox_ndecimals();
			self->tbx_type_zrot_spd_add_random = new_textbox_ndecimals();
			self->tbx_type_xrot_spd_mul = new_textbox_ndecimals();
			self->tbx_type_xrot_spd_mul_random = new_textbox_ndecimals();
			self->tbx_type_yrot_spd_mul = new_textbox_ndecimals();
			self->tbx_type_yrot_spd_mul_random = new_textbox_ndecimals();
			self->tbx_type_zrot_spd_mul = new_textbox_ndecimals();
			self->tbx_type_zrot_spd_mul_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_xrot_spd)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xrot_spd_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xrot_spd_add)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xrot_spd_add_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd_add)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd_add_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd_add)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd_add_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xrot_spd_mul)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_xrot_spd_mul_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd_mul)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_yrot_spd_mul_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd_mul)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_zrot_spd_mul_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_sprite_angle = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_sprite_angle)->suffix = /*"°"*/ STR(214);
			self->tbx_type_sprite_angle_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_sprite_angle_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_sprite_angle_add = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_sprite_angle_add)->suffix = /*"°"*/ STR(214);
			self->tbx_type_sprite_angle_add_random = new_textbox_ndecimals();
			ObjType(obj_textbox, self->tbx_type_sprite_angle_add_random)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_sprite_angle_add)->suffix = /*"°"*/ STR(214);
			ObjType(obj_textbox, self->tbx_type_sprite_angle_add_random)->suffix = /*"°"*/ STR(214);
			self->tbx_type_scale = new_textbox_ndecimals();
			self->tbx_type_scale_random = new_textbox_ndecimals();
			self->tbx_type_scale_add = new_textbox_ndecimals();
			self->tbx_type_scale_add_random = new_textbox_ndecimals();
			self->tbx_type_alpha = new_textbox_integer();
			ObjType(obj_textbox, self->tbx_type_alpha)->suffix = /*"%"*/ STR(208);
			self->tbx_type_alpha_random = new_textbox_integer();
			ObjType(obj_textbox, self->tbx_type_alpha_random)->suffix = /*"%"*/ STR(208);
			self->tbx_type_alpha_add = new_textbox_ninteger();
			ObjType(obj_textbox, self->tbx_type_alpha_add)->suffix = /*"%"*/ STR(208);
			self->tbx_type_alpha_add_random = new_textbox_ninteger();
			ObjType(obj_textbox, self->tbx_type_alpha_add_random)->suffix = /*"%"*/ STR(208);
			self->tbx_type_color_mix_time = new_textbox_decimals();
			self->tbx_type_color_mix_time_random = new_textbox_decimals();
			self->tbx_type_bounce_factor = new_textbox_decimals();
		}
		
		global::_app->ptype_list = ObjType(obj_tab, global::_app->template_editor)->type_list;
		global::_app->timeline = new_tab(/*"bottom"*/ STR(189), true, null_, e_window_TIMELINE);
		idVar(global::_app->timeline, script) = ID_tab_timeline;
		idBool(global::_app->timeline, movable) = false;
		withOne (Object, global::_app->timeline, global::_app->id)
		{
			sInt(tbx_interval_size) = new_textbox_integer();
			sInt(tbx_interval_offset) = new_textbox_integer();
			sInt(tbx_marker_name) = new_textbox(true, IntType(0), /*""*/ STR(0));
			sInt(tbx_search) = new_textbox(true, IntType(0), /*""*/ STR(0));
			sInt(tbx_rename) = new_textbox(true, IntType(0), /*""*/ STR(0));
			sVar(list_width) = IntType(320);
			sInt(hor_scroll) = (new obj_scrollbar)->id;
			sInt(hor_scroll_tl) = (new obj_scrollbar)->id;
			sInt(ver_scroll) = (new obj_scrollbar)->id;
		}
		
		global::_app->timeline_editor = new_tab(global::_app->setting_timeline_editor_location, false);
		withOne (obj_tab, global::_app->timeline_editor, global::_app->id)
		{
			self->info = tab_add_category(self, /*"timelineeditorinfo"*/ STR(223), icons_LIST_BULLETED_SMALL, ID_tab_timeline_editor_info, true);
			withOne (obj_category, self->info, self->id)
			{
				self->tbx_name = new_textbox(true, IntType(0), /*""*/ STR(0));
				self->tbx_text = new_textbox(false, IntType(0), /*""*/ STR(0));
				self->tbx_rot_point_x = new_textbox_ndecimals();
				self->tbx_rot_point_y = new_textbox_ndecimals();
				self->tbx_rot_point_z = new_textbox_ndecimals();
			}
			
			self->hierarchy = tab_add_category(self, /*"timelineeditorhierarchy"*/ STR(224), icons_HIERARCHY_SMALL, ID_tab_timeline_editor_hierarchy, true);
			self->appearance = tab_add_category(self, /*"timelineeditorappearance"*/ STR(225), ArrType::From({ icons_SPHERE_SHADING_SMALL, icons_SPHERE_SHADING_SMALL__DARK }), ID_tab_timeline_editor_appearance, false);
			withOne (obj_category, self->appearance, self->id)
			{
				self->tbx_glint_scale = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_glint_scale)->suffix = /*"%"*/ STR(208);
				self->tbx_depth = new_textbox_ninteger();
			}
			
			self->audio = tab_add_category(self, /*"timelineeditoraudio"*/ STR(226), icons_NOTE_SMALL, ID_tab_timeline_editor_audio, true);
			self->path = tab_add_category(self, /*"timelineeditorpath"*/ STR(227), icons_PATH_SMALL, ID_tab_timeline_editor_path, true);
			withOne (obj_category, self->path, self->id)
			{
				self->tbx_detail = new_textbox_decimals();
				self->tbx_radius = new_textbox_decimals();
				self->tbx_tex_length = new_textbox_decimals();
				self->tbx_shape_detail = new_textbox_decimals();
			}
			
		}
		
		global::_app->frame_editor = new_tab(global::_app->setting_frame_editor_location, false);
		withOne (obj_tab, global::_app->frame_editor, global::_app->id)
		{
			self->transform = tab_add_category(self, /*"frameeditortransform"*/ STR(228), icons_TRANSFORM_SMALL, ID_tab_frame_editor_transform, false);
			withOne (obj_category, self->transform, self->id)
			{
				self->tbx_pos_x = new_textbox_ndecimals();
				self->tbx_pos_y = new_textbox_ndecimals();
				self->tbx_pos_z = new_textbox_ndecimals();
				self->tbx_rot_x = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_rot_x)->suffix = /*"°"*/ STR(214);
				self->tbx_rot_y = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_rot_y)->suffix = /*"°"*/ STR(214);
				self->tbx_rot_z = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_rot_z)->suffix = /*"°"*/ STR(214);
				self->scale_all = false;
				self->tbx_sca_x = new_textbox_decimals();
				self->tbx_sca_y = new_textbox_decimals();
				self->tbx_sca_z = new_textbox_decimals();
				self->bend_sliders = false;
				self->tbx_bend[IntType(0)] = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_bend[IntType(0)])->suffix = /*"°"*/ STR(214);
				self->tbx_bend[IntType(1)] = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_bend[IntType(1)])->suffix = /*"°"*/ STR(214);
				self->tbx_bend[IntType(2)] = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_bend[IntType(2)])->suffix = /*"°"*/ STR(214);
				self->tbx_path_point_angle = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_path_point_angle)->suffix = /*"°"*/ STR(214);
				self->tbx_path_point_scale = new_textbox_decimals();
			}
			
			self->constraints = tab_add_category(self, /*"frameeditorconstraints"*/ STR(229), icons_JOINT_SMALL, ID_tab_frame_editor_constraints, false);
			withOne (obj_category, self->constraints, self->id)
			{
				self->tbx_path_offset = new_textbox_ndecimals();
				self->tbx_ik_blend = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_ik_blend)->suffix = /*"%"*/ STR(208);
				self->tbx_ik_angle_offset = new_textbox_ndecimals();
				ObjType(obj_textbox, self->tbx_ik_angle_offset)->suffix = /*"°"*/ STR(214);
			}
			
			self->material = tab_add_category(self, /*"frameeditormaterial"*/ STR(230), ArrType::From({ icons_SPHERE_MATERIAL_SMALL, icons_SPHERE_MATERIAL_SMALL__DARK }), ID_tab_frame_editor_material, false);
			withOne (obj_category, self->material, self->id)
			{
				self->tbx_alpha = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_alpha)->suffix = /*"%"*/ STR(208);
				self->tbx_mix_percent = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_mix_percent)->suffix = /*"%"*/ STR(208);
				self->tbx_emissive = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_emissive)->suffix = /*"%"*/ STR(208);
				self->tbx_metallic = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_metallic)->suffix = /*"%"*/ STR(208);
				self->tbx_roughness = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_roughness)->suffix = /*"%"*/ STR(208);
				self->tbx_subsurface = new_textbox_decimals();
				self->tbx_subsurface_radius.Real(X_) = new_textbox_integer();
				idVar(self->tbx_subsurface_radius.Real(X_), suffix) = /*"%"*/ STR(208);
				self->tbx_subsurface_radius.Real(Y_) = new_textbox_integer();
				idVar(self->tbx_subsurface_radius.Real(Y_), suffix) = /*"%"*/ STR(208);
				self->tbx_subsurface_radius.Real(Z_) = new_textbox_integer();
				idVar(self->tbx_subsurface_radius.Real(Z_), suffix) = /*"%"*/ STR(208);
				self->tbx_wind_influence = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_wind_influence)->suffix = /*"%"*/ STR(208);
			}
			
			self->particles = tab_add_category(self, /*"frameeditorparticles"*/ STR(231), icons_PARTICLES_SMALL, ID_tab_frame_editor_particles, false);
			withOne (obj_category, self->particles, self->id)
			{
				self->tbx_seed = new_textbox_ninteger();
				self->tbx_force = new_textbox_ndecimals();
				self->tbx_force_directional = new_textbox_ndecimals();
				self->tbx_force_vortex = new_textbox_ndecimals();
			}
			
			self->light = tab_add_category(self, /*"frameeditorlight"*/ STR(232), icons_LIGHT_POINT_SMALL, ID_tab_frame_editor_light, false);
			withOne (obj_category, self->light, self->id)
			{
				self->has_spotlight = false;
				self->tbx_size = new_textbox_decimals();
				self->tbx_range = new_textbox_decimals();
				self->tbx_strength = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_specular_strength = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_specular_strength)->suffix = /*"%"*/ STR(208);
				self->tbx_fade_size = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_fade_size)->suffix = /*"%"*/ STR(208);
				self->tbx_spot_radius = new_textbox_decimals();
				self->tbx_spot_sharpness = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_spot_sharpness)->suffix = /*"%"*/ STR(208);
			}
			
			self->camera = tab_add_category(self, /*"frameeditorcamera"*/ STR(233), icons_CAMERA_SMALL, ID_tab_frame_editor_camera, false);
			withOne (Object, self->camera, self->id)
			{
				sVar(video_template) = null_;
				sBool(look_at_rotate) = true;
				sInt(tbx_fov) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_fov))->suffix = /*"°"*/ STR(214);
				sInt(tbx_exposure) = new_textbox_decimals();
				sInt(tbx_gamma) = new_textbox_decimals();
				sInt(tbx_blade_amount) = new_textbox_integer();
				sInt(tbx_blade_angle) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_blade_angle))->suffix = /*"°"*/ STR(214);
				sInt(tbx_rotate_distance) = new_textbox_decimals();
				sInt(tbx_rotate_angle_xy) = new_textbox_ndecimals();
				ObjType(obj_textbox, sInt(tbx_rotate_angle_xy))->suffix = /*"°"*/ STR(214);
				sInt(tbx_rotate_angle_z) = new_textbox_ndecimals();
				ObjType(obj_textbox, sInt(tbx_rotate_angle_z))->suffix = /*"°"*/ STR(214);
				sInt(tbx_shake_strength_x) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_strength_x))->suffix = /*"%"*/ STR(208);
				sInt(tbx_shake_strength_y) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_strength_y))->suffix = /*"%"*/ STR(208);
				sInt(tbx_shake_strength_z) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_strength_z))->suffix = /*"%"*/ STR(208);
				sInt(tbx_shake_speed_x) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_speed_x))->suffix = /*"%"*/ STR(208);
				sInt(tbx_shake_speed_y) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_speed_y))->suffix = /*"%"*/ STR(208);
				sInt(tbx_shake_speed_z) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_shake_speed_z))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_depth) = new_textbox_decimals();
				sInt(tbx_dof_range) = new_textbox_decimals();
				sInt(tbx_dof_fade_size) = new_textbox_decimals();
				sInt(tbx_dof_blur_size) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_dof_blur_size))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_blur_ratio) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_blur_ratio))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_bias) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_bias))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_threshold) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_threshold))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_gain) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_gain))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_fringe_angle_red) = new_textbox_ndecimals();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_angle_red))->suffix = /*"°"*/ STR(214);
				sInt(tbx_dof_fringe_angle_green) = new_textbox_ndecimals();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_angle_green))->suffix = /*"°"*/ STR(214);
				sInt(tbx_dof_fringe_angle_blue) = new_textbox_ndecimals();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_angle_blue))->suffix = /*"°"*/ STR(214);
				sInt(tbx_dof_fringe_red) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_red))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_fringe_green) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_green))->suffix = /*"%"*/ STR(208);
				sInt(tbx_dof_fringe_blue) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_dof_fringe_blue))->suffix = /*"%"*/ STR(208);
				sInt(tbx_video_size_custom_width) = new_textbox_integer();
				sInt(tbx_video_size_custom_height) = new_textbox_integer();
				sInt(tbx_bloom_threshold) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_bloom_threshold))->suffix = /*"%"*/ STR(208);
				sInt(tbx_bloom_intensity) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_bloom_intensity))->suffix = /*"%"*/ STR(208);
				sInt(tbx_bloom_radius) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_bloom_radius))->suffix = /*"%"*/ STR(208);
				sInt(tbx_bloom_ratio) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_bloom_ratio))->suffix = /*"%"*/ STR(208);
				sInt(tbx_lens_dirt_radius) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_lens_dirt_radius))->suffix = /*"%"*/ STR(208);
				sInt(tbx_lens_dirt_intensity) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_lens_dirt_intensity))->suffix = /*"%"*/ STR(208);
				sInt(tbx_lens_dirt_power) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_lens_dirt_power))->suffix = /*"%"*/ STR(208);
				sInt(tbx_contrast) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_contrast))->suffix = /*"%"*/ STR(208);
				sInt(tbx_brightness) = new_textbox_ninteger();
				ObjType(obj_textbox, sInt(tbx_brightness))->suffix = /*"%"*/ STR(208);
				sInt(tbx_saturation) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_saturation))->suffix = /*"%"*/ STR(208);
				sInt(tbx_vibrance) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_vibrance))->suffix = /*"%"*/ STR(208);
				sInt(tbx_grain_strength) = new_textbox_ninteger();
				ObjType(obj_textbox, sInt(tbx_grain_strength))->suffix = /*"%"*/ STR(208);
				sInt(tbx_grain_saturation) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_grain_saturation))->suffix = /*"%"*/ STR(208);
				sInt(tbx_grain_size) = new_textbox_integer();
				sInt(tbx_vignette_radius) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_vignette_radius))->suffix = /*"%"*/ STR(208);
				sInt(tbx_vignette_softness) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_vignette_softness))->suffix = /*"%"*/ STR(208);
				sInt(tbx_vignette_strength) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_vignette_strength))->suffix = /*"%"*/ STR(208);
				sInt(tbx_ca_blur_amount) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_ca_blur_amount))->suffix = /*"%"*/ STR(208);
				sInt(tbx_ca_red_offset) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_ca_red_offset))->suffix = /*"%"*/ STR(208);
				sInt(tbx_ca_green_offset) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_ca_green_offset))->suffix = /*"%"*/ STR(208);
				sInt(tbx_ca_blue_offset) = new_textbox_integer();
				ObjType(obj_textbox, sInt(tbx_ca_blue_offset))->suffix = /*"%"*/ STR(208);
				sInt(tbx_distort_zoom_amount) = new_textbox_decimals();
				ObjType(obj_textbox, sInt(tbx_distort_zoom_amount))->suffix = /*"%"*/ STR(208);
				sInt(tbx_distort_amount) = new_textbox_ninteger();
				ObjType(obj_textbox, sInt(tbx_distort_amount))->suffix = /*"%"*/ STR(208);
			}
			
			self->sound = tab_add_category(self, /*"frameeditorsound"*/ STR(234), icons_VOLUME_SMALL, ID_tab_frame_editor_sound, true);
			withOne (obj_category, self->sound, self->id)
			{
				self->tbx_volume = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_volume)->suffix = /*"%"*/ STR(208);
				self->tbx_pitch = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_pitch)->suffix = /*"%"*/ STR(208);
				self->tbx_start = new_textbox_decimals();
				self->tbx_end = new_textbox_ndecimals();
			}
			
			self->text = tab_add_category(self, /*"frameeditortext"*/ STR(235), icons_TEXT_SMALL, ID_tab_frame_editor_text, false);
			withOne (Object, self->text, self->id)
				sInt(tbx_text) = new_textbox(false, IntType(0), /*""*/ STR(0));
			
			self->item = tab_add_category(self, /*"frameeditoritem"*/ STR(236), icons_ITEM_SMALL, ID_tab_frame_editor_item, false);
			withOne (obj_category, self->item, self->id)
			{
				self->item_scroll = (new obj_scrollbar)->id;
				self->item_slot = new_textbox_integer();
			}
			
			self->keyframe = tab_add_category(self, /*"frameeditorkeyframe"*/ STR(237), icons_KEYFRAME_SMALL, ID_tab_frame_editor_keyframe, false);
			withOne (obj_category, self->keyframe, self->id)
			{
				self->tbx_ease_in_x = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_ease_in_x)->suffix = /*"%"*/ STR(208);
				self->tbx_ease_in_y = new_textbox_ninteger();
				ObjType(obj_textbox, self->tbx_ease_in_y)->suffix = /*"%"*/ STR(208);
				self->tbx_ease_out_x = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_ease_out_x)->suffix = /*"%"*/ STR(208);
				self->tbx_ease_out_y = new_textbox_ninteger();
				ObjType(obj_textbox, self->tbx_ease_out_y)->suffix = /*"%"*/ STR(208);
				self->ease_link = false;
			}
			
		}
		
		global::_app->settings = new_tab(global::_app->setting_settings_location, false);
		withOne (obj_tab, global::_app->settings, global::_app->id)
		{
			self->program = tab_add_category(self, /*"settingsprogram"*/ STR(238), icons_SETTINGS_SMALL, ID_tab_settings_program, false);
			withOne (obj_category, self->program, self->id)
			{
				self->tbx_backup_time = new_textbox_integer();
				self->tbx_backup_amount = new_textbox_integer();
				self->tbx_watermark_padding = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_watermark_padding)->suffix = /*"%"*/ STR(208);
				self->tbx_watermark_scale = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_watermark_scale)->suffix = /*"%"*/ STR(208);
				self->tbx_watermark_opacity = new_textbox_integer();
				ObjType(obj_textbox, self->tbx_watermark_opacity)->suffix = /*"%"*/ STR(208);
			}
			
			self->interface_ = tab_add_category(self, /*"settingsinterface"*/ STR(239), icons_BRUSH_SMALL, ID_tab_settings_interface, false);
			self->controls = tab_add_category(self, /*"settingscontrols"*/ STR(240), icons_KEYBOARD_SMALL, ID_tab_settings_controls, false);
			withOne (obj_category, self->controls, self->id)
			{
				self->tbx_move_speed = new_textbox_decimals();
				self->tbx_look_sensitivity = new_textbox_decimals();
				self->tbx_fast_modifier = new_textbox_decimals();
				self->tbx_slow_modifier = new_textbox_decimals();
			}
			
		}
		
	}
	
	void app_startup_interface_timeline()
	{
		global::_app->timeline_playing = false;
		global::_app->timeline_playing_start_time = IntType(0);
		global::_app->timeline_playing_start_marker = IntType(0);
		global::_app->timeline_playing_last_marker = IntType(0);
		global::_app->timeline_playing_start_hor_scroll = IntType(0);
		global::_app->timeline_repeat = false;
		global::_app->timeline_seamless_repeat = false;
		global::_app->timeline_intervals_show = false;
		global::_app->timeline_interval_size = IntType(24);
		global::_app->timeline_interval_offset = IntType(0);
		global::_app->timeline_list_first = IntType(0);
		global::_app->timeline_list_visible = IntType(0);
		global::_app->timeline_mouse_pos = null_;
		global::_app->timeline_marker = IntType(0);
		global::_app->timeline_marker_move = IntType(0);
		global::_app->timeline_marker_previous = IntType(0);
		global::_app->timeline_region_start = null_;
		global::_app->timeline_region_end = null_;
		global::_app->timeline_region_pos = IntType(0);
		global::_app->timeline_length = IntType(0);
		global::_app->timeline_zoom = IntType(16);
		global::_app->timeline_zoom_goal = IntType(16);
		global::_app->timeline_camera = null_;
		global::_app->timeline_insert_pos = IntType(0);
		global::_app->timeline_show_frames = false;
		global::_app->timeline_marker_length = IntType(0);
		global::_app->timeline_move_obj = null_;
		global::_app->timeline_move_highlight_tl = null_;
		global::_app->timeline_move_highlight_pos = null_;
		global::_app->timeline_move_off_x = IntType(0);
		global::_app->timeline_move_off_y = IntType(0);
		global::_app->timeline_move_kf = null_;
		global::_app->timeline_move_kf_mouse_pos = null_;
		global::_app->timeline_sound_resize_mouse_pos = null_;
		global::_app->timeline_sound_end_mousex = IntType(0);
		global::_app->timeline_sound_end_value = IntType(0);
		global::_app->timeline_settings = false;
		global::_app->timeline_settings_import_loop_tl = null_;
		global::_app->timeline_settings_walk_fn = /*""*/ STR(0);
		global::_app->timeline_settings_run_fn = /*""*/ STR(0);
		global::_app->timeline_settings_keyframes = false;
		global::_app->timeline_settings_keyframes_export = false;
		global::_app->copy_kf_amount = IntType(0);
		global::_app->copy_kf_pos[IntType(0)] = IntType(0);
		global::_app->copy_kf_value[IntType(0)][IntType(0)] = IntType(0);
		global::_app->copy_kf_tl_save_id[IntType(0)] = /*""*/ STR(0);
		global::_app->copy_kf_tl_part_of_save_id[IntType(0)] = /*""*/ STR(0);
		global::_app->copy_kf_tl_model_part_name[IntType(0)] = null_;
		global::_app->tree_list = ds_list_create();
		global::_app->tree_list_filter = ds_list_create();
		global::_app->tree_visible_list = ds_list_create();
		global::_app->tree_update_parent_filter = global::_app->id;
		global::_app->tree_update_extend = false;
		global::_app->tree_update_color = null_;
		global::_app->project_model_list = ds_list_create();
		global::_app->project_timeline_list = ds_list_create();
		global::_app->timeline_settings_w = IntType(0);
		global::_app->timeline_settings_right_w = IntType(0);
		global::_app->timeline_marker_list = ds_list_create();
		global::_app->timeline_marker_current = null_;
		global::_app->timeline_marker_edit = null_;
		global::_app->timeline_marker_edit_offset = IntType(0);
		global::_app->timeline_search = /*""*/ STR(0);
		global::_app->timeline_rename = null_;
		global::_app->timeline_hide_color_tag = array_create({ IntType(9), false });
		global::_app->timeline_select_box_min = ArrType::From({ no_limit, no_limit, no_limit });
		global::_app->timeline_select_box_max = ArrType::From({ -no_limit, -no_limit, -no_limit });
	}
	
	void app_startup_interface_toolbar()
	{
		global::_app->toolbar_size = IntType(28);
		global::_app->toolbar_menu_active = false;
	}
	
	void app_startup_interface_views()
	{
		global::_app->view_area_x = IntType(0);
		global::_app->view_area_y = IntType(0);
		global::_app->view_area_width = IntType(0);
		global::_app->view_area_height = IntType(0);
		global::_app->view_click_x = IntType(0);
		global::_app->view_click_y = IntType(0);
		global::_app->view_resize_width = IntType(0);
		global::_app->view_resize_height = IntType(0);
		global::_app->view_glow_left_top = false;
		global::_app->view_glow_top = false;
		global::_app->view_glow_right_top = false;
		global::_app->view_glow_right = false;
		global::_app->view_glow_right_bottom = false;
		global::_app->view_glow_bottom = false;
		global::_app->view_glow_left_bottom = false;
		global::_app->view_glow_left = false;
		global::_app->view_split = global::_app->setting_view_split;
		global::_app->view_main = (new obj_view)->id;
		ObjType(obj_view, global::_app->view_main)->overlays = global::_app->setting_view_main_overlays;
		ObjType(obj_view, global::_app->view_main)->aspect_ratio = global::_app->setting_view_main_aspect_ratio;
		ObjType(obj_view, global::_app->view_main)->grid = global::_app->setting_view_main_grid;
		ObjType(obj_view, global::_app->view_main)->gizmos = global::_app->setting_view_main_gizmos;
		ObjType(obj_view, global::_app->view_main)->effects = global::_app->setting_view_main_effects;
		ObjType(obj_view, global::_app->view_main)->particles = global::_app->setting_view_main_particles;
		ObjType(obj_view, global::_app->view_main)->location = global::_app->setting_view_main_location.Str();
		ObjType(obj_view, global::_app->view_main)->quality = e_view_mode_SHADED;
		ObjType(obj_view, global::_app->view_main)->camera = -IntType(4);
		ObjType(obj_view, global::_app->view_main)->title = /*""*/ STR(0);
		global::_app->view_second = (new obj_view)->id;
		ObjType(obj_view, global::_app->view_second)->show = global::_app->setting_view_second_show;
		ObjType(obj_view, global::_app->view_second)->overlays = global::_app->setting_view_second_overlays;
		ObjType(obj_view, global::_app->view_second)->aspect_ratio = global::_app->setting_view_second_aspect_ratio;
		ObjType(obj_view, global::_app->view_second)->grid = global::_app->setting_view_second_grid;
		ObjType(obj_view, global::_app->view_second)->gizmos = global::_app->setting_view_second_gizmos;
		ObjType(obj_view, global::_app->view_second)->effects = global::_app->setting_view_second_effects;
		ObjType(obj_view, global::_app->view_second)->particles = global::_app->setting_view_second_particles;
		ObjType(obj_view, global::_app->view_second)->location = global::_app->setting_view_second_location.Str();
		ObjType(obj_view, global::_app->view_second)->location_last = ObjType(obj_view, global::_app->view_second)->location;
		ObjType(obj_view, global::_app->view_second)->width = global::_app->setting_view_second_width;
		ObjType(obj_view, global::_app->view_second)->height = global::_app->setting_view_second_height;
		ObjType(obj_view, global::_app->view_second)->quality = e_view_mode_SHADED;
		ObjType(obj_view, global::_app->view_second)->camera = -IntType(5);
		ObjType(obj_view, global::_app->view_second)->title = /*""*/ STR(0);
		global::_app->view_glow_ani = IntType(0);
		global::_app->view_glow_location_prev = /*""*/ STR(0);
		global::_app->view_render = false;
		global::_app->view_render_real_time = true;
		global::_app->view_control_ratio = IntType(1);
		global::_app->view_control_edit = null_;
		global::_app->view_control_edit_view = null_;
		global::_app->view_control_vec = vec2(IntType(0), IntType(0));
		global::_app->view_control_pos = vec2(IntType(0), IntType(0));
		global::_app->view_control_flip = false;
		global::_app->view_control_value = IntType(0);
		global::_app->view_control_move_distance = IntType(0);
		global::_app->view_control_scale_coords = vec2(IntType(0));
		global::_app->view_control_scale_amount = IntType(1);
		global::_app->view_control_scale_start = IntType(0);
		global::_app->view_control_value_scale = vec3(IntType(1));
		global::_app->view_control_matrix = null_;
		global::_app->view_control_length = null_;
		global::_app->view_control_ray_dir = vec3(IntType(0));
		global::_app->view_control_plane_normal = vec3(IntType(0));
		global::_app->view_control_plane_origin = vec3(IntType(0));
		global::_app->view_control_plane = false;
		global::_app->view_control_move_flip_axis = ArrType::From({ false, false, false });
	}
	
	void app_startup_keybinds()
	{
		global::keybinds = array_create({ e_keybind_amount });
		global::keybind_edit = null_;
		keybind_register(/*"projectnew"*/ STR(241), e_keybind_PROJECT_NEW, keybind_new(/*"N"*/ STR(242), true));
		keybind_register(/*"projectopen"*/ STR(243), e_keybind_PROJECT_OPEN, keybind_new(/*"O"*/ STR(244), true));
		keybind_register(/*"projectsave"*/ STR(245), e_keybind_PROJECT_SAVE, keybind_new(/*"S"*/ STR(246), true));
		keybind_register(/*"projectsaveas"*/ STR(247), e_keybind_PROJECT_SAVE_AS, keybind_new(/*"S"*/ STR(246), true, true));
		keybind_register(/*"importasset"*/ STR(248), e_keybind_IMPORT_ASSET, keybind_new(/*"I"*/ STR(249), true));
		keybind_register(/*"undo"*/ STR(250), e_keybind_UNDO, keybind_new(/*"Z"*/ STR(251), true));
		keybind_register(/*"redo"*/ STR(252), e_keybind_REDO, keybind_new(/*"Y"*/ STR(253), true));
		keybind_register(/*"timelinedelete"*/ STR(254), e_keybind_TIMELINE_DELETE, keybind_new(/*"R"*/ STR(255), true));
		keybind_register(/*"timelineduplicate"*/ STR(256), e_keybind_TIMELINE_DUPLICATE, keybind_new(/*"D"*/ STR(257), true));
		keybind_register(/*"timelineselect"*/ STR(258), e_keybind_TIMELINE_SELECT, keybind_new(/*"A"*/ STR(259), true));
		keybind_register(/*"timelinehide"*/ STR(260), e_keybind_TIMELINE_HIDE, keybind_new(/*"H"*/ STR(261), true));
		keybind_register(/*"timelineshowhidden"*/ STR(262), e_keybind_TIMELINE_SHOW_HIDDEN, keybind_new(/*"H"*/ STR(261), true, false, true));
		keybind_register(/*"createfolder"*/ STR(263), e_keybind_CREATE_FOLDER, keybind_new(/*"F"*/ STR(264), true));
		keybind_register(/*"keyframescreate"*/ STR(265), e_keybind_KEYFRAMES_CREATE, keybind_new(/*"Q"*/ STR(266), true));
		keybind_register(/*"keyframescopy"*/ STR(267), e_keybind_KEYFRAMES_COPY, keybind_new(/*"C"*/ STR(268), true));
		keybind_register(/*"keyframescut"*/ STR(269), e_keybind_KEYFRAMES_CUT, keybind_new(/*"X"*/ STR(270), true));
		keybind_register(/*"keyframespaste"*/ STR(271), e_keybind_KEYFRAMES_PASTE, keybind_new(/*"V"*/ STR(272), true));
		keybind_register(/*"keyframesdelete"*/ STR(273), e_keybind_KEYFRAMES_DELETE, keybind_new(vk_delete));
		keybind_register(/*"play"*/ STR(274), e_keybind_PLAY, keybind_new(vk_space));
		keybind_register(/*"playbeginning"*/ STR(275), e_keybind_PLAY_BEGINNING, keybind_new(vk_enter));
		keybind_register(/*"markerleft"*/ STR(276), e_keybind_MARKER_LEFT, keybind_new(vk_left), true);
		keybind_register(/*"markerright"*/ STR(277), e_keybind_MARKER_RIGHT, keybind_new(vk_right), true);
		keybind_register(/*"rendermode"*/ STR(278), e_keybind_RENDER_MODE, keybind_new(vk_f5));
		keybind_register(/*"particlesspawn"*/ STR(279), e_keybind_PARTICLES_SPAWN, keybind_new(/*"X"*/ STR(270)));
		keybind_register(/*"particlesclear"*/ STR(280), e_keybind_PARTICLES_CLEAR, keybind_new(/*"C"*/ STR(268)));
		keybind_register(/*"secondaryview"*/ STR(281), e_keybind_SECONDARY_VIEW, keybind_new(vk_f6));
		keybind_register(/*"toolselect"*/ STR(282), e_keybind_TOOL_SELECT, keybind_new(/*"W"*/ STR(283)));
		keybind_register(/*"toolmove"*/ STR(284), e_keybind_TOOL_MOVE, keybind_new(/*"G"*/ STR(285)));
		keybind_register(/*"toolrotate"*/ STR(286), e_keybind_TOOL_ROTATE, keybind_new(/*"R"*/ STR(255)));
		keybind_register(/*"toolscale"*/ STR(287), e_keybind_TOOL_SCALE, keybind_new(/*"S"*/ STR(246)));
		keybind_register(/*"toolbend"*/ STR(288), e_keybind_TOOL_BEND, keybind_new(/*"B"*/ STR(289)));
		keybind_register(/*"tooltransform"*/ STR(290), e_keybind_TOOL_TRANSFORM, keybind_new(/*"T"*/ STR(291)));
		keybind_register(/*"snap"*/ STR(292), e_keybind_SNAP, keybind_new(/*"F"*/ STR(264)));
		keybind_register(/*"camforward"*/ STR(293), e_keybind_CAM_FORWARD, keybind_new(/*"W"*/ STR(283)), true);
		keybind_register(/*"camleft"*/ STR(294), e_keybind_CAM_LEFT, keybind_new(/*"A"*/ STR(259)), true);
		keybind_register(/*"camback"*/ STR(295), e_keybind_CAM_BACK, keybind_new(/*"S"*/ STR(246)), true);
		keybind_register(/*"camright"*/ STR(296), e_keybind_CAM_RIGHT, keybind_new(/*"D"*/ STR(257)), true);
		keybind_register(/*"camascend"*/ STR(297), e_keybind_CAM_ASCEND, keybind_new(/*"E"*/ STR(298)), true);
		keybind_register(/*"camdescend"*/ STR(299), e_keybind_CAM_DESCEND, keybind_new(/*"Q"*/ STR(266)), true);
		keybind_register(/*"camrollforward"*/ STR(300), e_keybind_CAM_ROLL_FORWARD, keybind_new(/*"Z"*/ STR(251)), true);
		keybind_register(/*"camrollback"*/ STR(301), e_keybind_CAM_ROLL_BACK, keybind_new(/*"C"*/ STR(268)), true);
		keybind_register(/*"camrollreset"*/ STR(302), e_keybind_CAM_ROLL_RESET, keybind_new(/*"X"*/ STR(270)), true);
		keybind_register(/*"camreset"*/ STR(303), e_keybind_CAM_RESET, keybind_new(/*"R"*/ STR(255)), true);
		keybind_register(/*"camfast"*/ STR(304), e_keybind_CAM_FAST, keybind_new(vk_space), true);
		keybind_register(/*"camslow"*/ STR(305), e_keybind_CAM_SLOW, keybind_new(null_, false, true), true);
		keybind_register(/*"camviewtimeline"*/ STR(306), e_keybind_CAM_VIEW_TIMELINE, keybind_new(/*"V"*/ STR(272)), false);
		keybinds_update_match();
	}
	
	void app_startup_lists(ScopeAny self)
	{
		global::value_name_list = ds_list_create();
		ds_list_add({ global::value_name_list, /*"POS_X"*/ STR(307), /*"POS_Y"*/ STR(308), /*"POS_Z"*/ STR(309), /*"ROT_X"*/ STR(310), /*"ROT_Y"*/ STR(311), /*"ROT_Z"*/ STR(312), /*"SCA_X"*/ STR(313), /*"SCA_Y"*/ STR(314), /*"SCA_Z"*/ STR(315), /*"BEND_ANGLE"*/ STR(316), /*"BEND_ANGLE_X"*/ STR(317), /*"BEND_ANGLE_Y"*/ STR(318), /*"BEND_ANGLE_Z"*/ STR(319), /*"ALPHA"*/ STR(320), /*"RGB_ADD"*/ STR(321), /*"RGB_SUB"*/ STR(322), /*"RGB_MUL"*/ STR(323), /*"HSB_ADD"*/ STR(324), /*"HSB_SUB"*/ STR(325), /*"HSB_MUL"*/ STR(326), /*"MIX_COLOR"*/ STR(327), /*"GLOW_COLOR"*/ STR(328), /*"MIX_PERCENT"*/ STR(329), /*"EMISSIVE"*/ STR(330), /*"METALLIC"*/ STR(331), /*"ROUGHNESS"*/ STR(332), /*"SUBSURFACE"*/ STR(333), /*"SUBSURFACE_RADIUS_RED"*/ STR(334), /*"SUBSURFACE_RADIUS_GREEN"*/ STR(335), /*"SUBSURFACE_RADIUS_BLUE"*/ STR(336), /*"SUBSURFACE_COLOR"*/ STR(337), /*"WIND_INFLUENCE"*/ STR(338), /*"SPAWN"*/ STR(339), /*"FREEZE"*/ STR(340), /*"CLEAR"*/ STR(341), /*"CUSTOM_SEED"*/ STR(342), /*"SEED"*/ STR(343), /*"ATTRACTOR"*/ STR(344), /*"FORCE"*/ STR(345), /*"FORCE_DIRECTIONAL"*/ STR(346), /*"FORCE_VORTEX"*/ STR(347), /*"LIGHT_COLOR"*/ STR(348), /*"LIGHT_STRENGTH"*/ STR(349), /*"LIGHT_SPECULAR_STRENGTH"*/ STR(350), /*"LIGHT_SIZE"*/ STR(351), /*"LIGHT_RANGE"*/ STR(352), /*"LIGHT_FADE_SIZE"*/ STR(353), /*"LIGHT_SPOT_RADIUS"*/ STR(354), /*"LIGHT_SPOT_SHARPNESS"*/ STR(355), /*"CAM_FOV"*/ STR(356), /*"CAM_BLADE_AMOUNT"*/ STR(357), /*"CAM_BLADE_ANGLE"*/ STR(358), /*"CAM_LIGHT_MANAGEMENT"*/ STR(359), /*"CAM_TONEMAPPER"*/ STR(360), /*"CAM_EXPOSURE"*/ STR(361), /*"CAM_GAMMA"*/ STR(362), /*"CAM_ROTATE"*/ STR(363), /*"CAM_ROTATE_DISTANCE"*/ STR(364), /*"CAM_ROTATE_ANGLE_XY"*/ STR(365), /*"CAM_ROTATE_ANGLE_Z"*/ STR(366), /*"CAM_SHAKE"*/ STR(367), /*"CAM_SHAKE_MODE"*/ STR(368), /*"CAM_SHAKE_STRENGTH_X"*/ STR(369), /*"CAM_SHAKE_STRENGTH_Y"*/ STR(370), /*"CAM_SHAKE_STRENGTH_Z"*/ STR(371), /*"CAM_SHAKE_SPEED_X"*/ STR(372), /*"CAM_SHAKE_SPEED_Y"*/ STR(373), /*"CAM_SHAKE_SPEED_Z"*/ STR(374), /*"CAM_DOF"*/ STR(375), /*"CAM_DOF_DEPTH"*/ STR(376), /*"CAM_DOF_RANGE"*/ STR(377), /*"CAM_DOF_FADE_SIZE"*/ STR(378), /*"CAM_DOF_BLUR_SIZE"*/ STR(379), /*"CAM_DOF_BLUR_RATIO"*/ STR(380), /*"CAM_DOF_BIAS"*/ STR(381), /*"CAM_DOF_THRESHOLD"*/ STR(382), /*"CAM_DOF_GAIN"*/ STR(383), /*"CAM_DOF_FRINGE"*/ STR(384), /*"CAM_DOF_FRINGE_ANGLE_RED"*/ STR(385), /*"CAM_DOF_FRINGE_ANGLE_GREEN"*/ STR(386), /*"CAM_DOF_FRINGE_ANGLE_BLUE"*/ STR(387), /*"CAM_DOF_FRINGE_RED"*/ STR(388), /*"CAM_DOF_FRINGE_GREEN"*/ STR(389), /*"CAM_DOF_FRINGE_BLUE"*/ STR(390), /*"CAM_BLOOM"*/ STR(391), /*"CAM_BLOOM_THRESHOLD"*/ STR(392), /*"CAM_BLOOM_INTENSITY"*/ STR(393), /*"CAM_BLOOM_RADIUS"*/ STR(394), /*"CAM_BLOOM_RATIO"*/ STR(395), /*"CAM_BLOOM_BLEND"*/ STR(396), /*"CAM_LENS_DIRT"*/ STR(397), /*"CAM_LENS_DIRT_BLOOM"*/ STR(398), /*"CAM_LENS_DIRT_GLOW"*/ STR(399), /*"CAM_LENS_DIRT_RADIUS"*/ STR(400), /*"CAM_LENS_DIRT_INTENSITY"*/ STR(401), /*"CAM_LENS_DIRT_POWER"*/ STR(402), /*"CAM_COLOR_CORRECTION"*/ STR(403), /*"CAM_CONTRAST"*/ STR(404), /*"CAM_BRIGHTNESS"*/ STR(405), /*"CAM_SATURATION"*/ STR(406), /*"CAM_VIBRANCE"*/ STR(407), /*"CAM_COLOR_BURN"*/ STR(408), /*"CAM_GRAIN"*/ STR(409), /*"CAM_GRAIN_STRENGTH"*/ STR(410), /*"CAM_GRAIN_SATURATION"*/ STR(411), /*"CAM_GRAIN_SIZE"*/ STR(412), /*"CAM_VIGNETTE"*/ STR(413), /*"CAM_VIGNETTE_RADIUS"*/ STR(414), /*"CAM_VIGNETTE_SOFTNESS"*/ STR(415), /*"CAM_VIGNETTE_STRENGTH"*/ STR(416), /*"CAM_VIGNETTE_COLOR"*/ STR(417), /*"CAM_CA"*/ STR(418), /*"CAM_CA_BLUR_AMOUNT"*/ STR(419), /*"CAM_CA_DISTORT_CHANNELS"*/ STR(420), /*"CAM_CA_RED_OFFSET"*/ STR(421), /*"CAM_CA_GREEN_OFFSET"*/ STR(422), /*"CAM_CA_BLUE_OFFSET"*/ STR(423), /*"CAM_DISTORT"*/ STR(424), /*"CAM_DISTORT_REPEAT"*/ STR(425), /*"CAM_DISTORT_ZOOM_AMOUNT"*/ STR(426), /*"CAM_DISTORT_AMOUNT"*/ STR(427), /*"CAM_SIZE_USE_PROJECT"*/ STR(428), /*"CAM_SIZE_KEEP_ASPECT_RATIO"*/ STR(429), /*"CAM_WIDTH"*/ STR(430), /*"CAM_HEIGHT"*/ STR(431), /*"BG_IMAGE_SHOW"*/ STR(432), /*"BG_IMAGE_ROTATION"*/ STR(433), /*"BG_SKY_MOON_PHASE"*/ STR(434), /*"BG_SKY_TIME"*/ STR(435), /*"BG_SKY_ROTATION"*/ STR(436), /*"BG_SUNLIGHT_STRENGTH"*/ STR(437), /*"BG_SUNLIGHT_ANGLE"*/ STR(438), /*"BG_SKY_SUN_ANGLE"*/ STR(439), /*"BG_SKY_SUN_SCALE"*/ STR(440), /*"BG_SKY_MOON_ANGLE"*/ STR(441), /*"BG_SKY_MOON_SCALE"*/ STR(442), /*"BG_TWILIGHT"*/ STR(443), /*"BG_SKY_CLOUDS_SHOW"*/ STR(444), /*"BG_SKY_CLOUDS_SPEED"*/ STR(445), /*"BG_SKY_CLOUDS_HEIGHT"*/ STR(446), /*"BG_SKY_CLOUDS_OFFSET"*/ STR(447), /*"BG_GROUND_SHOW"*/ STR(448), /*"BG_GROUND_SLOT"*/ STR(449), /*"BG_BIOME"*/ STR(450), /*"BG_SKY_COLOR"*/ STR(451), /*"BG_SKY_CLOUDS_COLOR"*/ STR(452), /*"BG_SUNLIGHT_COLOR"*/ STR(453), /*"BG_AMBIENT_COLOR"*/ STR(454), /*"BG_NIGHT_COLOR"*/ STR(455), /*"BG_GRASS_COLOR"*/ STR(456), /*"BG_FOLIAGE_COLOR"*/ STR(457), /*"BG_WATER_COLOR"*/ STR(458), /*"BG_LEAVES_OAK_COLOR"*/ STR(459), /*"BG_LEAVES_SPRUCE_COLOR"*/ STR(460), /*"BG_LEAVES_BIRCH_COLOR"*/ STR(461), /*"BG_LEAVES_JUNGLE_COLOR"*/ STR(462), /*"BG_LEAVES_ACACIA_COLOR"*/ STR(463), /*"BG_LEAVES_DARK_OAK_COLOR"*/ STR(464), /*"BG_LEAVES_MANGROVE_COLOR"*/ STR(465), /*"BG_FOG_SHOW"*/ STR(466), /*"BG_FOG_SKY"*/ STR(467), /*"BG_FOG_CUSTOM_COLOR"*/ STR(468), /*"BG_FOG_COLOR"*/ STR(469), /*"BG_FOG_CUSTOM_OBJECT_COLOR"*/ STR(470), /*"BG_FOG_OBJECT_COLOR"*/ STR(471), /*"BG_FOG_DISTANCE"*/ STR(472), /*"BG_FOG_SIZE"*/ STR(473), /*"BG_FOG_HEIGHT"*/ STR(474), /*"BG_WIND"*/ STR(475), /*"BG_WIND_SPEED"*/ STR(476), /*"BG_WIND_STRENGTH"*/ STR(477), /*"BG_WIND_DIRECTION"*/ STR(478), /*"BG_WIND_DIRECTIONAL_SPEED"*/ STR(479), /*"BG_WIND_DIRECTIONAL_STRENGTH"*/ STR(480), /*"BG_TEXTURE_ANI_SPEED"*/ STR(481), /*"TEXTURE_OBJ"*/ STR(482), /*"TEXTURE_MATERIAL_OBJ"*/ STR(483), /*"TEXTURE_NORMAL_OBJ"*/ STR(484), /*"SOUND_OBJ"*/ STR(485), /*"SOUND_VOLUME"*/ STR(486), /*"SOUND_PITCH"*/ STR(487), /*"SOUND_START"*/ STR(488), /*"SOUND_END"*/ STR(489), /*"TEXT"*/ STR(490), /*"TEXT_FONT"*/ STR(491), /*"TEXT_HALIGN"*/ STR(492), /*"TEXT_VALIGN"*/ STR(493), /*"TEXT_AA"*/ STR(494), /*"TEXT_OUTLINE"*/ STR(495), /*"TEXT_OUTLINE_COLOR"*/ STR(496), /*"CUSTOM_ITEM_SLOT"*/ STR(497), /*"ITEM_SLOT"*/ STR(498), /*"ITEM_NAME"*/ STR(499), /*"PATH_OBJ"*/ STR(500), /*"PATH_OFFSET"*/ STR(501), /*"PATH_POINT_ANGLE"*/ STR(502), /*"PATH_POINT_SCALE"*/ STR(503), /*"IK_TARGET"*/ STR(504), /*"IK_BLEND"*/ STR(505), /*"IK_TARGET_ANGLE"*/ STR(506), /*"IK_ANGLE_OFFSET"*/ STR(507), /*"VISIBLE"*/ STR(508), /*"TRANSITION"*/ STR(509), /*"EASE_IN_X"*/ STR(510), /*"EASE_IN_Y"*/ STR(511), /*"EASE_OUT_X"*/ STR(512), /*"EASE_OUT_Y"*/ STR(513) });
		global::camera_values_list = ds_list_create();
		for (IntType i = e_value_CAM_FOV; i <= e_value_CAM_HEIGHT; i++)
			ds_list_add({ global::camera_values_list, i });
		global::camera_values_copy = ds_list_create();
		for (IntType i = IntType(0); i < ds_list_size(global::camera_values_list); i++)
			DsList(global::camera_values_copy)[i] = tl_value_default(DsList(global::camera_values_list).Value(i));
		global::camera_use_default_list = ds_list_create();
		for (IntType i = IntType(0); i < ds_list_size(global::camera_values_list); i++)
		{
			IntType valueid = e_value_CAM_FOV + i;
			if (tl_value_is_bool(valueid))
				DsList(global::camera_use_default_list)[i] = false;
			else
				if (valueid == e_value_CAM_WIDTH || valueid == e_value_CAM_HEIGHT)
					DsList(global::camera_use_default_list)[i] = null_;
				else
					DsList(global::camera_use_default_list)[i] = true;
			
			
		}
		global::temp_type_name_list = ds_list_create();
		ds_list_add({ global::temp_type_name_list, /*"char"*/ STR(514), /*"spblock"*/ STR(515), /*"scenery"*/ STR(516), /*"item"*/ STR(517), /*"block"*/ STR(518), /*"bodypart"*/ STR(519), /*"particles"*/ STR(520), /*"text"*/ STR(99), /*"cube"*/ STR(3), /*"cone"*/ STR(521), /*"cylinder"*/ STR(522), /*"sphere"*/ STR(523), /*"surface"*/ STR(524), /*"model"*/ STR(525) });
		global::tl_type_name_list = ds_list_create();
		ds_list_add({ global::tl_type_name_list, /*"char"*/ STR(514), /*"spblock"*/ STR(515), /*"scenery"*/ STR(516), /*"item"*/ STR(517), /*"block"*/ STR(518), /*"bodypart"*/ STR(519), /*"particles"*/ STR(520), /*"text"*/ STR(99), /*"cube"*/ STR(3), /*"cone"*/ STR(521), /*"cylinder"*/ STR(522), /*"sphere"*/ STR(523), /*"surface"*/ STR(524), /*"model"*/ STR(525), /*"camera"*/ STR(120), /*"spotlight"*/ STR(526), /*"pointlight"*/ STR(527), /*"folder"*/ STR(528), /*"background"*/ STR(213), /*"audio"*/ STR(529), /*"path"*/ STR(530), /*"pathpoint"*/ STR(531), /*"shape"*/ STR(532), /*"lightsource"*/ STR(533) });
		global::res_type_name_list = ds_list_create();
		ds_list_add({ global::res_type_name_list, /*"pack"*/ STR(534), /*"packunzipped"*/ STR(535), /*"skin"*/ STR(536), /*"downloadskin"*/ STR(198), /*"itemsheet"*/ STR(537), /*"legacyblocksheet"*/ STR(538), /*"blocksheet"*/ STR(539), /*"scenery"*/ STR(516), /*"fromworld"*/ STR(540), /*"particlesheet"*/ STR(541), /*"texture"*/ STR(542), /*"font"*/ STR(543), /*"sound"*/ STR(544), /*"model"*/ STR(525) });
		global::transition_list = ds_list_create();
		ds_list_add({ global::transition_list, /*"linear"*/ STR(545), /*"instant"*/ STR(546), /*"bezier"*/ STR(547), /*"easeinquad"*/ STR(548), /*"easeoutquad"*/ STR(549), /*"easeinoutquad"*/ STR(550), /*"easeincubic"*/ STR(551), /*"easeoutcubic"*/ STR(552), /*"easeinoutcubic"*/ STR(553), /*"easeinquart"*/ STR(554), /*"easeoutquart"*/ STR(555), /*"easeinoutquart"*/ STR(556), /*"easeinquint"*/ STR(557), /*"easeoutquint"*/ STR(558), /*"easeinoutquint"*/ STR(559), /*"easeinsine"*/ STR(560), /*"easeoutsine"*/ STR(561), /*"easeinoutsine"*/ STR(562), /*"easeinexpo"*/ STR(563), /*"easeoutexpo"*/ STR(564), /*"easeinoutexpo"*/ STR(565), /*"easeincirc"*/ STR(566), /*"easeoutcirc"*/ STR(567), /*"easeinoutcirc"*/ STR(568), /*"easeinelastic"*/ STR(569), /*"easeoutelastic"*/ STR(570), /*"easeinoutelastic"*/ STR(571), /*"easeinback"*/ STR(572), /*"easeoutback"*/ STR(573), /*"easeinoutback"*/ STR(574), /*"easeinbounce"*/ STR(575), /*"easeoutbounce"*/ STR(576), /*"easeinoutbounce"*/ STR(577) });
		log({ /*"Make transitions"*/ STR(578) });
		sVar(transition_texture_map) = new_transition_texture_map(IntType(36), IntType(36), IntType(6), true);
		sVar(transition_texture_small_map) = new_transition_texture_map(IntType(24), IntType(24), IntType(3), false);
		log({ /*"Transitions OK"*/ STR(579) });
		global::videotemplate_list = ds_list_create();
		ds_list_add({ global::videotemplate_list, new_videotemplate(/*"avatar"*/ STR(580), IntType(512), IntType(512)), new_videotemplate(/*"hd_720p"*/ STR(581), IntType(1280), IntType(720)), new_videotemplate(/*"fhd_1080p"*/ STR(582), IntType(1920), IntType(1080)), new_videotemplate(/*"qhd_1440p"*/ STR(583), IntType(2560), IntType(1440)), new_videotemplate(/*"uhd_4k"*/ STR(584), IntType(3840), IntType(2160)), new_videotemplate(/*"hd_720p_cinematic"*/ STR(585), IntType(1680), IntType(720)), new_videotemplate(/*"fhd_1080p_cinematic"*/ STR(586), IntType(2560), IntType(1080)), new_videotemplate(/*"qhd_1440p_cinematic"*/ STR(587), IntType(3440), IntType(1440)), new_videotemplate(/*"uhd_4k_cinematic"*/ STR(588), IntType(5120), IntType(2160)) });
		global::videoquality_list = ds_list_create();
		ds_list_add({ global::videoquality_list, new_videoquality(/*"best"*/ STR(589), IntType(5000000)), new_videoquality(/*"high"*/ STR(590), IntType(2500000)), new_videoquality(/*"medium"*/ STR(591), IntType(1200000)), new_videoquality(/*"low"*/ STR(592), IntType(700000)), new_videoquality(/*"verylow"*/ STR(593), IntType(350000)) });
		global::language_english_map = ds_map_create();
		global::language_map = ds_map_create();
		language_load(language_file, global::language_english_map);
		ds_map_copy(global::language_map, global::language_english_map);
		langauge_new(language_file);
		global::biome_list = ds_list_create();
		ds_list_add({ global::biome_list, new_biome(/*"custom"*/ STR(594), IntType(0), IntType(0), true, c_plains_biome_grass, c_plains_biome_foliage, c_plains_biome_water, null_) });
		global::particle_template_list = ds_list_create();
		global::particle_template_map = ds_map_create();
		global::minecraft_color_name_list = ds_list_create();
		ds_list_add({ global::minecraft_color_name_list, /*"white"*/ STR(595), /*"orange"*/ STR(596), /*"magenta"*/ STR(597), /*"light_blue"*/ STR(598), /*"yellow"*/ STR(599), /*"lime"*/ STR(600), /*"pink"*/ STR(601), /*"gray"*/ STR(602), /*"light_gray"*/ STR(603), /*"cyan"*/ STR(604), /*"purple"*/ STR(605), /*"blue"*/ STR(606), /*"brown"*/ STR(607), /*"green"*/ STR(608), /*"red"*/ STR(609), /*"black"*/ STR(610) });
		global::minecraft_color_list = ds_list_create();
		ds_list_add({ global::minecraft_color_list, c_minecraft_white, c_minecraft_orange, c_minecraft_magenta, c_minecraft_light_blue, c_minecraft_yellow, c_minecraft_lime, c_minecraft_pink, c_minecraft_gray, c_minecraft_light_gray, c_minecraft_cyan, c_minecraft_purple, c_minecraft_blue, c_minecraft_brown, c_minecraft_green, c_minecraft_red, c_minecraft_black });
		global::minecraft_glowing_sign_list = ds_list_create();
		ds_list_add({ global::minecraft_glowing_sign_list, ArrType::From({ hex_to_color(/*"FCFCFC"*/ STR(611)), hex_to_color(/*"656565"*/ STR(612)) }), ArrType::From({ hex_to_color(/*"FC671F"*/ STR(613)), hex_to_color(/*"65280C"*/ STR(614)) }), ArrType::From({ hex_to_color(/*"FC00FC"*/ STR(615)), hex_to_color(/*"650065"*/ STR(616)) }), ArrType::From({ hex_to_color(/*"98BECB"*/ STR(617)), hex_to_color(/*"3C4B51"*/ STR(618)) }), ArrType::From({ hex_to_color(/*"FCFC00"*/ STR(619)), hex_to_color(/*"656500"*/ STR(620)) }), ArrType::From({ hex_to_color(/*"8DFC00"*/ STR(621)), hex_to_color(/*"4B6500"*/ STR(622)) }), ArrType::From({ hex_to_color(/*"FC68B2"*/ STR(623)), hex_to_color(/*"652947"*/ STR(624)) }), ArrType::From({ hex_to_color(/*"7E7E7E"*/ STR(625)), hex_to_color(/*"323232"*/ STR(626)) }), ArrType::From({ hex_to_color(/*"D0D0D0"*/ STR(627)), hex_to_color(/*"535353"*/ STR(628)) }), ArrType::From({ hex_to_color(/*"00D6D6"*/ STR(629)), hex_to_color(/*"006565"*/ STR(630)) }), ArrType::From({ hex_to_color(/*"9E20ED"*/ STR(631)), hex_to_color(/*"3F0C5F"*/ STR(632)) }), ArrType::From({ hex_to_color(/*"0000FC"*/ STR(633)), hex_to_color(/*"000065"*/ STR(634)) }), ArrType::From({ hex_to_color(/*"894413"*/ STR(635)), hex_to_color(/*"361B07"*/ STR(636)) }), ArrType::From({ hex_to_color(/*"00FC00"*/ STR(637)), hex_to_color(/*"006500"*/ STR(638)) }), ArrType::From({ hex_to_color(/*"FC0000"*/ STR(639)), hex_to_color(/*"650000"*/ STR(640)) }), ArrType::From({ hex_to_color(/*"000000"*/ STR(641)), hex_to_color(/*"EDE8CA"*/ STR(642)) }) });
		global::minecraft_pattern_list = ds_list_create();
		global::minecraft_pattern_short_list = ds_list_create();
		global::minecraft_sherd_map = ds_map_create();
		global::minecraft_armor_trim_pattern_list = ds_list_create();
		global::minecraft_armor_trim_material_list = ds_list_create();
		global::blend_mode_list = ds_list_create();
		ds_list_add({ global::blend_mode_list, /*"normal"*/ STR(643), /*"add"*/ STR(644), /*"subtract"*/ STR(645), /*"multiply"*/ STR(646), /*"screen"*/ STR(647) });
		global::blend_mode_map = ds_map_create();
		ds_map_add(global::blend_mode_map, /*"normal"*/ STR(643), bm_normal);
		ds_map_add(global::blend_mode_map, /*"add"*/ STR(644), bm_add);
		ds_map_add(global::blend_mode_map, /*"subtract"*/ STR(645), bm_subtract);
		ds_map_add(global::blend_mode_map, /*"multiply"*/ STR(646), ArrType::From({ bm_zero, bm_src_color }));
		ds_map_add(global::blend_mode_map, /*"screen"*/ STR(647), ArrType::From({ bm_one, bm_inv_src_color }));
		global::timeline_icon_list = ds_list_create();
		ds_list_add({ global::timeline_icon_list, icons_CHARACTER, icons_BLOCK_SPECIAL, icons_SCENERY, icons_ITEM, icons_BLOCK, icons_PART, icons_FIREWORKS, icons_TEXT, icons_CUBE, icons_CONE, icons_CYLINDER, icons_SPHERE, icons_PLANE, icons_MODEL, icons_CAMERA, icons_LIGHT_SPOT, icons_LIGHT_POINT, icons_FOLDER, icons_CLOUD, icons_NOTE, icons_PATH, icons_PATH_POINT });
		global::timeline_icon_list_dark = ds_list_create();
		ds_list_add({ global::timeline_icon_list_dark, icons_CHARACTER, icons_BLOCK_SPECIAL, icons_SCENERY, icons_ITEM, icons_BLOCK, icons_PART, icons_FIREWORKS, icons_TEXT, icons_CUBE__DARK, icons_CONE__DARK, icons_CYLINDER__DARK, icons_SPHERE__DARK, icons_PLANE, icons_MODEL, icons_CAMERA, icons_LIGHT_SPOT, icons_LIGHT_POINT, icons_FOLDER, icons_CLOUD, icons_NOTE, icons_PATH, icons_PATH_POINT });
		global::render_pass_list = ds_list_create();
		ds_list_add({ global::render_pass_list, /*"combined"*/ STR(648), /*"diffuse"*/ STR(649), /*"specular"*/ STR(650), /*"ao"*/ STR(651), /*"shadows"*/ STR(123), /*"indirect"*/ STR(125), /*"indirectshadows"*/ STR(652), /*"reflections"*/ STR(126), /*"depth"*/ STR(653), /*"normal"*/ STR(643), /*"material"*/ STR(654) });
	}
	
	void app_startup_micro_animations()
	{
		global::microani_arr = ArrType::From({ IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0), IntType(0) });
		global::current_microani = null_;
		global::microani_list = ds_list_create();
		global::microani_delete_list = ds_list_create();
		global::microanis = ds_string_map_create();
		global::microani_prefix = /*""*/ STR(0);
	}
	
	void app_startup_recent(ScopeAny self)
	{
		sStr(recent_display_mode) = /*"grid"*/ STR(655);
		sVar(recent_sort_mode) = e_recent_sort_date_newest;
		sInt(recent_list) = ds_list_create();
		sInt(recent_list_display) = ds_list_create();
		sVar(recent_thumbnail_width) = IntType(240);
		sVar(recent_thumbnail_height) = IntType(180);
		sReal(recent_list_amount) = IntType(0);
		sBool(recent_list_update) = false;
		sInt(recent_scrollbar) = (new obj_scrollbar)->id;
		ObjType(obj_scrollbar, sInt(recent_scrollbar))->snap_value = IntType(44);
		sBool(recent_add_wait) = false;
		recent_load(self);
	}
	
	void app_startup_shortcut_bar()
	{
		global::_app->shortcut_bar_list = ds_list_create();
		global::_app->shortcut_bar_state = /*""*/ STR(0);
		global::_app->shortcut_bar_state_prev = /*""*/ STR(0);
	}
	
	void app_startup_themes(ScopeAny self)
	{
		sVar(update_interface_timeout) = current_time();
		sBool(update_interface_wait) = false;
		global::a_accent = IntType(1);
		global::a_accent_hover = IntType(1);
		global::a_accent_pressed = IntType(1);
		global::a_hover = .45;
		global::a_accent_overlay = .10;
		global::a_text_main = .9;
		global::a_text_secondary = .6;
		global::a_text_tertiary = .35;
		global::a_border = .15;
		global::a_overlay = .05;
		global::theme_light = (new obj_theme)->id;
		withOne (obj_theme, global::theme_light, self->id)
		{
			self->name = /*"light"*/ STR(656);
			self->dark = false;
			self->pattern = IntType(0);
			self->accent_list = ArrType();
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"DB3030"*/ STR(657)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"D85B00"*/ STR(658)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"D68E02"*/ STR(659)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"34A100"*/ STR(660)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"0D8E41"*/ STR(661)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"048E8E"*/ STR(662)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"2144F1"*/ STR(663)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"982BCB"*/ STR(664)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"E93983"*/ STR(665)));
			self->level_top = hex_to_color(/*"F7FAFC"*/ STR(666));
			self->level_middle = hex_to_color(/*"ECEFF1"*/ STR(667));
			self->level_bottom = hex_to_color(/*"D7DFE2"*/ STR(668));
			self->viewport_top = hex_to_color(/*"F0FFFF"*/ STR(669));
			self->viewport_bottom = hex_to_color(/*"B5E8F2"*/ STR(670));
			self->text_main = hex_to_color(/*"0D1214"*/ STR(671));
			self->text_secondary = self->text_main;
			self->text_tertiary = self->text_main;
			self->border = self->text_main;
			self->overlay = self->text_main;
			self->button_text = hex_to_color(/*"FFFFFF"*/ STR(672));
			self->button_text_alpha = .91;
			self->dark_overlay_alpha = .15;
			self->red_error = hex_to_color(/*"FF1D0F"*/ STR(673));
			self->yellow_warning = hex_to_color(/*"FFC01E"*/ STR(674));
			self->green_success = hex_to_color(/*"61C159"*/ STR(675));
			self->red = hex_to_color(/*"FF5656"*/ STR(676));
			self->green = hex_to_color(/*"4AB758"*/ STR(677));
			self->blue = hex_to_color(/*"1370FB"*/ STR(678));
			self->pink = hex_to_color(/*"FF5FFF"*/ STR(679));
			self->cyan = hex_to_color(/*"51C2FF"*/ STR(680));
			self->yellow = hex_to_color(/*"F4CC5D"*/ STR(681));
			self->magenta = hex_to_color(/*"FF37E8"*/ STR(682));
			self->toast_color[e_toast_INFO] = hex_to_color(/*"158AF5"*/ STR(683));
			self->toast_color[e_toast_POSITIVE] = hex_to_color(/*"64A56B"*/ STR(684));
			self->toast_color[e_toast_WARNING] = hex_to_color(/*"D09522"*/ STR(685));
			self->toast_color[e_toast_NEGATIVE] = hex_to_color(/*"FF1D0F"*/ STR(673));
		}
		
		global::theme_dark = (new obj_theme)->id;
		withOne (obj_theme, global::theme_dark, self->id)
		{
			self->name = /*"dark"*/ STR(686);
			self->dark = true;
			self->pattern = IntType(0);
			self->accent_list = ArrType();
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FF7E76"*/ STR(687)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FFA360"*/ STR(688)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FFF065"*/ STR(689)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"8BFF6D"*/ STR(690)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"4EF390"*/ STR(691)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"49EED9"*/ STR(692)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"98BBFF"*/ STR(693)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"DF9CFF"*/ STR(694)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FF9BC5"*/ STR(695)));
			self->level_top = hex_to_color(/*"37444A"*/ STR(696));
			self->level_middle = hex_to_color(/*"2B373D"*/ STR(697));
			self->level_bottom = hex_to_color(/*"18242A"*/ STR(698));
			self->viewport_top = hex_to_color(/*"2B373D"*/ STR(697));
			self->viewport_bottom = hex_to_color(/*"839096"*/ STR(699));
			self->text_main = hex_to_color(/*"FFFFFF"*/ STR(672));
			self->text_secondary = self->text_main;
			self->text_tertiary = self->text_main;
			self->border = self->text_main;
			self->overlay = self->text_main;
			self->button_text = hex_to_color(/*"000000"*/ STR(641));
			self->button_text_alpha = .91;
			self->dark_overlay_alpha = .25;
			self->red_error = hex_to_color(/*"FF7A72"*/ STR(700));
			self->yellow_warning = hex_to_color(/*"FFEB36"*/ STR(701));
			self->green_success = hex_to_color(/*"64E879"*/ STR(702));
			self->red = hex_to_color(/*"FF5656"*/ STR(676));
			self->green = hex_to_color(/*"23FF88"*/ STR(703));
			self->blue = hex_to_color(/*"1370FB"*/ STR(678));
			self->pink = hex_to_color(/*"FF5FFF"*/ STR(679));
			self->cyan = hex_to_color(/*"51C2FF"*/ STR(680));
			self->yellow = hex_to_color(/*"FFD969"*/ STR(704));
			self->magenta = hex_to_color(/*"FF37E8"*/ STR(682));
			self->toast_color[e_toast_INFO] = hex_to_color(/*"7EC1FF"*/ STR(705));
			self->toast_color[e_toast_POSITIVE] = hex_to_color(/*"64E879"*/ STR(702));
			self->toast_color[e_toast_WARNING] = hex_to_color(/*"FFEB36"*/ STR(701));
			self->toast_color[e_toast_NEGATIVE] = hex_to_color(/*"FF7A72"*/ STR(700));
		}
		
		global::theme_darker = (new obj_theme)->id;
		withOne (obj_theme, global::theme_darker, self->id)
		{
			self->name = /*"darker"*/ STR(706);
			self->dark = true;
			self->pattern = IntType(0);
			self->accent_list = ArrType();
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FF7E76"*/ STR(687)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FFA360"*/ STR(688)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FFF065"*/ STR(689)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"8BFF6D"*/ STR(690)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"4EF390"*/ STR(691)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"49EED9"*/ STR(692)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"98BBFF"*/ STR(693)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"DF9CFF"*/ STR(694)));
			array_add(VarType::CreateRef(self->accent_list), hex_to_color(/*"FF9BC5"*/ STR(695)));
			self->level_top = hex_to_color(/*"1C1C1C"*/ STR(707));
			self->level_middle = hex_to_color(/*"101010"*/ STR(708));
			self->level_bottom = hex_to_color(/*"050505"*/ STR(709));
			self->viewport_top = hex_to_color(/*"484848"*/ STR(710));
			self->viewport_bottom = hex_to_color(/*"2B2B2B"*/ STR(711));
			self->text_main = hex_to_color(/*"FFFFFF"*/ STR(672));
			self->text_secondary = self->text_main;
			self->text_tertiary = self->text_main;
			self->border = self->text_main;
			self->overlay = self->text_main;
			self->button_text = hex_to_color(/*"000000"*/ STR(641));
			self->button_text_alpha = .91;
			self->dark_overlay_alpha = .65;
			self->red_error = hex_to_color(/*"FF7A72"*/ STR(700));
			self->yellow_warning = hex_to_color(/*"FFEB36"*/ STR(701));
			self->green_success = hex_to_color(/*"64E879"*/ STR(702));
			self->red = hex_to_color(/*"FF5656"*/ STR(676));
			self->green = hex_to_color(/*"23FF88"*/ STR(703));
			self->blue = hex_to_color(/*"1370FB"*/ STR(678));
			self->pink = hex_to_color(/*"FF5FFF"*/ STR(679));
			self->cyan = hex_to_color(/*"51C2FF"*/ STR(680));
			self->yellow = hex_to_color(/*"FFD969"*/ STR(704));
			self->magenta = hex_to_color(/*"FF37E8"*/ STR(682));
			self->toast_color[e_toast_INFO] = hex_to_color(/*"7EC1FF"*/ STR(705));
			self->toast_color[e_toast_POSITIVE] = hex_to_color(/*"64E879"*/ STR(702));
			self->toast_color[e_toast_WARNING] = hex_to_color(/*"FFEB36"*/ STR(701));
			self->toast_color[e_toast_NEGATIVE] = hex_to_color(/*"FF7A72"*/ STR(700));
		}
		
		global::c_control_red = ObjType(obj_theme, global::theme_darker)->red;
		global::c_control_green = ObjType(obj_theme, global::theme_darker)->green;
		global::c_control_blue = ObjType(obj_theme, global::theme_darker)->blue;
		global::c_control_cyan = ObjType(obj_theme, global::theme_darker)->cyan;
		global::c_control_yellow = ObjType(obj_theme, global::theme_darker)->yellow;
		global::c_control_magenta = ObjType(obj_theme, global::theme_darker)->magenta;
		global::c_control_white = ObjType(obj_theme, global::theme_light)->level_middle;
	}
	
}
